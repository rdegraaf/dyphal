2014-01-05_001  Rennie deGraaf  <rennie.degraaf@gmail.com>
    Fonts are bigger than expected in Konqueror and Opera

    WONTFIX.  This appears to be due to those browsers using a default font 
    that's larger at any specified size than the default fonts used by Firefox 
    and Chromium, and I don't want to get in the business of requesting 
    specific fonts by name.


2014-01-06_001  Rennie deGraaf  <rennie.degraaf@gmail.com>
    Old page contents remain visible when a hash change results in a load error.

    WONTFIX.  Only occurs in error paths, and not worth the effort of fixing.


2014-01-06_002  Rennie deGraaf  <rennie.degraaf@gmail.com>
    Backspace doesn't work for navigation in IE8, Konqueror or Opera.

    WONTFIX.  This is not a core feature and 100% support for IE8, Konqueror, 
    and Opera is not necessary.  It appears that backspace is tied to "back" in 
    those browsers and cannot be handled in Javascript.


2014-01-08_001  Rennie deGraaf  <rennie.degraaf@gmail.com>
    The full-screen photo overlay doesn't work properly in Opera when the 
    window is small.

    WONTFIX.  This is not a core feature and 100% support for Opera is not 
    necessary.


2014-01-10_001  Rennie deGraaf  <rennie.degraaf@gmail.com>
    The error event doesn't fire if the debug stylesheet fails to load in Opera.

    WONTFIX.  This is not a core feature and 100% support for Opera is not 
    necessary.  Bug reported to Opera (DSK-387854).


2014-01-12_001  Rennie deGraaf  <rennie.degraaf@gmail.com>
    CSS properties loaded through obj.style[prop] need to be camelCase.  The 
    preferred way to get them is obj.style.getPropertyValue(prop), but this 
    isn't supported by IE8 and is apparently buggy on some Firefox versions for 
    shorthand properties (eg, "background").  Chrome does support dashed-
    lowercase CSS properties through obj.style[prop].

    WORKAROUND: This is apparently an idiosyncrasy of the standards and 
    Chrome's behaviour is a non-standard extension.  Using obj.style[prop] and 
    camelCasing property names as needed seems to work on all supported 
    platforms.


2014-01-17_001  Rennie deGraaf  <rennie.degraaf@gmail.com>
    The first photo doesn't load and debug mode doesn't work on Android 4.3
    and and earlier (4.4.2 works).  Apparently, they don't support the load 
    event for link elements.  

    WORKAROUND: I can't find any way to feature-detect browsers with this bug, 
    so I check for a version of Android earlier than 4.4 and start a poll loop
    with an exponential backoff until the stylesheet is present. 


2014-01-18_001  Rennie deGraaf  <rennie.degraaf@gmail.com>
    Despite photos being cached, browsers still check the server for new 
    versions of photos and thumbnails when displaying photo pages.  This could 
    probably be fixed by caching Image objects for the photos and thumbnails 
    in the scripts and creating IMG elements from them.

    POSTPONED: The overhead of checking with the server for new versions should 
    not be a big deal, and I need to stop adding unnecessary features if I'm 
    ever going to get this to a useful state.


2014-02-04_001  Rennie deGraaf  <rennie.degraaf@gmail.com>
    Everything gets really spread-out on large wide windows.  It would look 
    better if the description, properties, and navigation stuff were pushed 
    over beside the photo.  

    POSTPONED: There's no clear way for things to the left and right of the 
    contentPanel to move into unused space on its edges without putting layout 
    information in the JavaScript or bounding the width of the photo.  Using a 
    'middle-out' layout where the photo is positioned in the center and pushes 
    things out to its sides won't work because assigning a maximum width to the 
    contentPanel requires knowledge of layout.  We can calculate the maximum 
    width while generating albums and store it in the album JSON, but 
    repositioning the stuff on the sides after photo scaling also requires 
    knowledge of layout.  Bounding the width of contentPanel and forcing stuff 
    to the sides to stick to its edges would limit the width photos that can be 
    shown and may cause the side panels to move around as we switch between 
    photos.  Maybe there's a way to set a max-width on the contentPanel when 
    the album is loaded, set up CSS so that it the browser makes it as wide as 
    possible without exceeding that so that we can measure its actual size to 
    scale the photo, and force the sidebars to stick to its edges?  I can live 
    without the layout automatically adjusting when the window is resized if 
    necessary.


2014-04-05_001  Rennie deGraaf  <rennie.degraaf@gmail.com>
    The configuration file parser for DyphalGenerator doesn't handle improperly 
    formatted settings.  For instance, setting "threads" to a string will 
    result in DyphalGenerator crashing with a cryptic stack trace.  Ideally, 
    it'd just ignore the bad setting and continue.  This probably also applies 
    to saved albums.

    POSTPONED: There doesn't appear to be any way for DyphalGenerator to 
    generate bad config files.  If a user edits it manually and breaks it, 
    then s/he should be able to figure out how to fix it.  Simply deleting the 
    config file will get things working again.


2014-04-07_001  Rennie deGraaf  <rennie.degraaf@gmail.com>
    Album JSON files store photo paths relative to the user's home directory 
    and don't state the user name.  This limits their ability to be shared 
    while still being openable in DyphalGenerator.

    WONTFIX: Paths are necessarily system-specific and most contents of user 
    home directories are only readable by their owner.  There's no clear need 
    for users on the same system to be able to import each other's album files. 
    Also, addressing this issue would aggrevate bug 2014-04-07_002.


2014-04-07_002  Rennie deGraaf  <rennie.degraaf@gmail.com>
    Album JSON files contain paths to the original photos and are shared to the 
    world.  This leaks information about the user's system environment.

    POSTPONED: This is an artefact of not wanting separate save and album 
    files.  The paths likely aren't valid on the machine serving photo albums 
    to the web, so the usefulness of the paths to an attacker is limited.  To 
    fix this, I'll need to either create separate save files or encrypt the 
    paths.


2014-04-09_002  Rennie deGraaf  <rennie.degraaf@gmail.com>
    DyphalGenerator doesn't load far enough to get to the error message under 
    Python 2.x.  It fails to load urllib.parse.  If I remove that, it fails to 
    load the dyphal modules.

    WONTFIX: This looks like it will be a pain to fix and it's not worth the 
    trouble.  The version check should still be useful if someone tries to load 
    DyphalGenerator under a pre-3.3 version of Python 3.


2014-04-12_001  Rennie deGraaf  <rennie.degraaf@gmail.com>
    DyphalGenerator won't load files whose names contain double-quotes when 
    they're selected in a file dialog.

    EXTERNAL: This seems to be a known bug with the KDE file dialog (see 
    https://bugs.kde.org/show_bug.cgi?id=185433).  It presumably won't occur 
    when using some other file dialog.  Files whose names contain double-quotes 
    can be loaded from existing albums.


2014-04-25_001  Rennie deGraaf  <rennie.degraaf@gmail.com>
    Small-screen mode doesn't work on IE 8.

    WONTFIX: This is not a core feature and 100% support for IE 8 is not 
    necessary.


2014-04-25_002  Rennie deGraaf  <rennie.degraaf@gmail.com>
    The full-screen photo overlay in IE 8 gets cropped to the display size 
    rather than being resized.

    WONTFIX: This is not a core feature and 100% support for IE 8 is not 
    necessary.


2014-04-27_001  Rennie deGraaf  <rennie.degraaf@gmail.com>
    Touch navigation doesn't work on Jun's Nexus 7" tablet and in the Android 
    4.4.2 simulator.

    EXTERNAL: The touchend event is broken in Android 3.x and 4.0, fixed in 
    4.1, and regressed in 4.4.  There are reports of it being broken in some 
    4.2 and 4.3 builds as well.  See https://code.google.com/p/android/issues/
    detail?id=19827.  The touchend event works if you call evt.preventDefault() 
    in the touchmove handler, but that breaks scrolling so it's not a good 
    workaround.  I have a workaround in place that calls event.preventDefault() 
    on any touch that /starts/ with a horizontal motion so that it might be 
    interpreted as a swipe; touches that start with an vertical motion, even 
    if they then move horizontally, are not caught and can be used for 
    scrolling. 


2014-05-11_001  Rennie deGraaf  <rennie.degraaf@gmail.com>
    Touch navigation doesn't work on Ian's Surface.

    OPEN: Of course IE 10 and 11 don't use the same touch event interface as 
    everything else, because that might be compatible or something.  Typical.

