For version 3:

    * Test swipe navigation on Surface?

    * Overlay view doesn't work correctly on Android?

    * Fix bug 2016-12-20_001.

    * Add a checkbox to the DyphalGenerator UI to make it possible to re-open 
      an album.  If checked, DyphalGenerator will continue to output file paths 
      and other information that's not used by the web page.  If unchecked, 
      only output information needed by the web page.  This will address bug 
      2014-04-07_002.

      Alternately, create a separate album metadata file that's hidden from the 
      user.  When an album is opened, look for the additional information and 
      load it as well.  Maybe put a unique ID in the album file to make this 
      easier?  This will require a new file format version.

    * Make DyphalGenerator work on non-Linux platforms

    * full-screen on small screens: https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API

    * Add some sort of "About" dialog in DyphalGenerator with credits and 
      licence details.

    * Python type hints?

For future versions:

    * An automated test suite would be nice.

    * Create an index view, populated from an index JSON that lists all albums. 
      Add album thumbnails to album JSON; load all album JSONs from the index 
      view and display the title and thumbnail for each album.  Come up with 
      some way to locate the index JSON and add albums to it when they're 
      generated.  Consider automatically copying the album template when 
      generating albums in DyphalGenerator.

    * Drop support for IE <11.  Get rid of the compat crap and replace PNG 
      buttons with SVG.  Maybe use data URIs in CSS to reduce server round-
      trips?  Replace top-level divs with html5 header, footer, main, details, 
      nav elements?  calc() might make some of the CSS simpler.

    * Revisit whether Android <4.4 support is still needed.  If not, get rid of 
      the poll loop and overlay touching.  See bugs 2014-01-17_001 and 
      2014-05-16_001 for more details.

    * Reference CSS properties in a consistent and standards-compatible way.  
      See bug 2014-01-12_001 for more details.

    * Cache all photos and thumbnails that have been downloaded so that the 
      browser doesn't need to keep polling the server to see if they've 
      changed.  See bug 2014-01-18_001 for more details.

    * Design a more compact layout for large windows.  See bug 2014-02-04_001 
      for more details.

    * Handle thumbnails with aspect ratios other than 4:3 (eg, for panorama 
      photos) without cropping.

    * Handle unexpected values in the DyphalGenerator configuration file and 
      album files without crashing.  See bug 2014-04-05_001 for more details.

    * Add a "sort mode" option to DyphalGenerator, which can be set to "by file 
      name", "by time", or "none".  If set to "by file name", automatically 
      sort photos by file name.  If "by time", automatically sort by time.  If 
      "none", don't sort by default and allow the user to sort manually.

    * Switch to a proper bug-tracking system.

    * Model-View separation in DyphalGenerator.  At the very least, I'd no 
      longer need to make foreground-thread callbacks every time I want to 
      change something.

    * Move the help content into a separate file and load both the help and 
      readme content in iframes on top of the album.

    * A build option for minified release builds would be nice.  So would an 
      option to build an installation tarball of everything.  

    * On-line help in DyphalGenerator.

    * Reduce the spacing on items in the Add Caption and Add Property menus in 
      DyphalGenerator.  I tried to change the padding with a QMenu::item 
      stylesheet, but this removed the hover effect.  I can't figure out how to 
      get both.  It's probably not important unless the user is using a fairly 
      small screen.

    * Use the photo title instead of album title on in photo view if available.

    * Try using screen.lockOrientation() in small-screen mode, once something 
      supports it?

    * Add a 'full' size option to the 'scale' combobox in DyphalGenerator.

    * Center photos vertically, at least in small-screen mode.

    * Python's xml.etree.ElementTree is documented as being unsafe for handling 
      untrusted XML.  Use something else (defusedxml?) instead.

    * Replace setScreenSize() with a window.matchMedia query.

    * Add a way to set/edit photo comments, since gThumb's comment support and 
      UI seem to be getting worse over time rather than better.  (gThumb 3.2 
      treats EXIF:DateTimeOriginal as authoritative even in the presence of 
      other timestamps, overwrites EXIF:DateTimeOriginal when changing the 
      timestamp through its UI, and doesn't display the timestamp or location 
      in its comment panel.  gThumb3 is apparently making its UI more Gnome-
      specific.)

    * Remove stylesheet-specific code relating to the compact layout from 
      dyphal.js.

    * Handle photo orientations other than top-left in DyphalGenerator.

    * Putting <div> and other block elements inside a <label> violates the HTML 
      standard.

    * Multi-thread gthumb-comment-update

    * Better progress indication in gthumb-comment-update

    * Command-line mode for DyphalGenerator to generate an album for an 
      existing album file, and to install the template to a listed directory.

    * Stylesheet for printing.

    * Use a CSS pre-processor that lets me nest selectors, so that I don't have 
      to repeat "body.whatever" on so many selectors.  Also, combine all four 
      stylesheets into one to reduce server requests.  

    * Support photo list formats from other software (DigiKam, KPhotoAlbum, 
      geeqie, etc?) in DyphalGenerator.
      
      DigiKam uses an opqaue database for metadata, but can store metadata in 
      photo tags.  However, it's metadata editor is heavily focused on the 
      implementation details.  For instance, to set a location, you need to 
      switch to the "IPTC" tab and enter the location field.  KPhotoAlbum 
      appears not to be able to write photo tags at all, or even to import them 
      into its opaque database.  It also has a confusing UI.

    * When an existing album is re-opened in DyphalGenerator, track of what 
      gets changed so that I don't need to re-generate everything on save.  
      Re-loading the photo JSON and comparing it to fresh data is probably not 
      worth the effort, but substantial time could be saved by not 
      re-generating scaled photos.  However, this would require me to store 
      some measure if whether the photo itself has changed.  Can I get a hash 
      of the photo that excludes embedded metadata?

    * Better icons in DyphalGenerator.

    * Make things like the thumbnail size and template file names configurable 
      in DyphalGenerator.

    * If KDE ever fixes their buggy directory chooser, consider switching to 
      the native dialog in DyphalUI::_installTemplate()

    * Add command-line options to install.sh to set the installation paths.

    * Get rid of ChangeLog in favour of git log?

